{
  "tasks": [
    {
      "id": "initial-setup",
      "intern": "frontend-intern",
      "task": "Audit existing Next.js application structure and identify missing components for NC State Sports Hub",
      "branch": "feature/frontend-audit",
      "priority": "high",
      "status": "completed",
      "created": "2025-07-07T00:00:00Z",
      "completed": "2025-07-07T03:20:00Z",
      "completedBy": "Senior Developer Agent",
      "description": "Review current homepage, identify missing sports components, and create component roadmap",
      "deliverables": "frontend-audit-report.md with 12 identified missing components and 4-phase implementation plan"
    },
    {
      "id": "live-score-widget-integration",
      "intern": "frontend-intern",
      "task": "Integrate LiveScoreWidget component into main homepage layout at /nc-state-sports-hub/nc-state-sports-hub-production/src/app/page.tsx. Update existing component to use ESPN API service at src/lib/espn-api.ts for real-time NC State game data. Add responsive grid layout with basketball, football, and baseball scores.",
      "branch": "feature/live-score-integration",
      "priority": "high",
      "status": "in-progress",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/app/page.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/LiveScoreWidget.tsx"
      ],
      "requirements": [
        "Modify existing LiveScoreWidget.tsx to use espnAPI.getNCStateLiveGames()",
        "Add auto-refresh every 30 seconds with React useEffect",
        "Implement loading states and error handling",
        "Create responsive 3-column layout for different sports",
        "Add NC State branding (#CC0000) and Wolfpack styling",
        "Include click handlers for game detail navigation",
        "Add TypeScript interfaces for game data structures"
      ],
      "estimatedTime": "45 minutes"
    },
    {
      "id": "news-feed-component",
      "intern": "frontend-intern",
      "task": "Create comprehensive NewsFeed component at /nc-state-sports-hub/nc-state-sports-hub-production/src/components/NewsFeed.tsx using RSS service at src/lib/rss-feed.ts. Build article card layout with search, pagination, and category filtering for Backing the Pack news integration.",
      "branch": "feature/news-feed-component",
      "priority": "high",
      "status": "in-progress",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/NewsFeed.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/NewsCard.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/SearchBar.tsx"
      ],
      "requirements": [
        "Use rssService.getBackingThePackNews() for data fetching",
        "Implement responsive article card grid layout",
        "Add search functionality across article titles and content",
        "Create category filtering (Basketball, Football, Baseball, Recruiting)",
        "Implement pagination or infinite scroll for article loading",
        "Add loading skeletons and error states",
        "Include article preview modals before external navigation",
        "Add social sharing buttons for articles"
      ],
      "estimatedTime": "60 minutes"
    },
    {
      "id": "backend-setup",
      "intern": "backend-intern",
      "task": "Review AWS Amplify configuration and optimize DynamoDB schemas for sports data",
      "branch": "feature/backend-optimization",
      "priority": "high",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Analyze current backend setup and recommend improvements for sports data handling"
    },
    {
      "id": "auth-flow",
      "intern": "auth-intern",
      "task": "Implement complete AWS Cognito authentication flow with NC State student/fan user profiles",
      "branch": "feature/auth-system",
      "priority": "medium",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Create login/logout, user profiles, and role-based access for students vs general fans"
    },
    {
      "id": "ci-cd-setup",
      "intern": "devops-intern",
      "task": "Set up GitHub Actions workflows for testing, deployment, and cost monitoring",
      "branch": "feature/ci-cd",
      "priority": "medium",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Create comprehensive CI/CD pipeline with Lighthouse checks and AWS cost alerts"
    },
    {
      "id": "game-schedule-component",
      "intern": "frontend-intern",
      "task": "Create responsive GameSchedule component displaying NC State basketball and football schedules",
      "branch": "feature/game-schedule",
      "priority": "high",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Build component that integrates with ESPN API for live schedule data"
    },
    {
      "id": "live-scores-widget",
      "intern": "frontend-intern",
      "task": "BUILD COMPLETE LIVE SCORE WIDGET: Create src/components/LiveGameWidget.tsx that fetches real-time NC State sports data from ESPN API (team ID: 152). Must display current game score, time remaining, quarter/period, upcoming games with dates/opponents. Auto-refresh every 30 seconds, responsive design, loading/error states, NC State branding (#CC0000). Include TypeScript interfaces, click navigation to game details. COMPREHENSIVE IMPLEMENTATION REQUIRED - not just a basic component.",
      "branch": "feature/live-scores",
      "priority": "high",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Complete live scores widget with ESPN API integration",
      "detailedRequirements": [
        "ESPN API integration with NC State team ID 152",
        "Current game: score, time, quarter, team logos",
        "Upcoming games: date, time, opponent, venue",
        "30-second auto-refresh with loading indicators",
        "Mobile-responsive grid layout",
        "Error handling with retry functionality",
        "TypeScript interfaces for all data structures",
        "Click handlers for game detail navigation",
        "NC State red (#CC0000) branding throughout",
        "Accessibility compliance (ARIA labels, keyboard nav)"
      ]
    },
    {
      "id": "news-integration",
      "intern": "frontend-intern",
      "task": "BUILD COMPLETE NEWS FEED SYSTEM: Create src/components/NewsFeed.tsx that integrates with Backing the Pack RSS feed (https://www.backingthepack.com/rss/current.xml). Parse RSS, display news articles in attractive card layout with titles, excerpts, publish dates, thumbnails. Include infinite scroll/pagination, search functionality, category filtering. Handle RSS errors gracefully. COMPREHENSIVE NEWS SYSTEM IMPLEMENTATION REQUIRED.",
      "branch": "feature/news-backend",
      "priority": "high",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Complete news feed with RSS integration",
      "detailedRequirements": [
        "RSS feed parsing from Backing the Pack",
        "News article cards with title, excerpt, date, thumbnail",
        "Infinite scroll or pagination for article loading",
        "Search functionality across article titles/content",
        "Category/tag filtering system",
        "RSS parsing error handling with fallbacks",
        "Mobile-responsive card grid layout",
        "Article preview modals before external navigation",
        "Social sharing buttons for articles",
        "Performance optimization with lazy loading images"
      ]
    },
    {
      "id": "player-profiles",
      "intern": "frontend-intern",
      "task": "BUILD COMPLETE TEAM ROSTER SYSTEM: Create src/app/roster/page.tsx and src/components/PlayerCard.tsx for comprehensive NC State team rosters. Support Football, Basketball (Men's/Women's), Baseball, other sports. Fetch player data from ESPN API, display player cards with photos, stats, positions, biographical info. Include search/filter by sport, position, class year. Must be responsive, use NC State branding, handle multiple sports gracefully. FULL ROSTER PAGE IMPLEMENTATION REQUIRED.",
      "branch": "feature/player-profiles",
      "priority": "high",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Complete team roster system with multi-sport support",
      "detailedRequirements": [
        "Multi-sport support: Football, Basketball (M/W), Baseball, Soccer, etc.",
        "Player cards with photos, stats, position, year, hometown",
        "Search functionality by name, position, sport",
        "Filter dropdowns for sport, position, class year",
        "ESPN API integration for player data",
        "Responsive grid layout with card hover effects",
        "Loading skeletons for data fetching",
        "Player detail modals with expanded stats",
        "NC State branding and team colors",
        "Performance optimization for large rosters (virtualization)"
      ]
    },
    {
      "id": "fan-community",
      "intern": "frontend-intern",
      "task": "Develop fan community features including comments, predictions, and fan polls",
      "branch": "feature/fan-community",
      "priority": "low",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Create interactive features for fan engagement and community building"
    },
    {
      "id": "mobile-optimization",
      "intern": "frontend-intern",
      "task": "Optimize all components for mobile devices and ensure Core Web Vitals performance",
      "branch": "feature/mobile-optimization",
      "priority": "medium",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Ensure mobile-first responsive design and achieve Lighthouse scores > 90"
    },
    {
      "id": "raleigh-integration",
      "intern": "backend-intern",
      "task": "Integrate local Raleigh data including sports bars, ticket vendors, and campus events",
      "branch": "feature/raleigh-integration",
      "priority": "low",
      "status": "in-progress",
      "created": "2025-07-07T00:00:00Z",
      "description": "Add local business and event data to enhance fan experience"
    },
    {
      "id": "documentation-complete",
      "intern": "cursor-doc-agent",
      "task": "Generate comprehensive documentation for all components, APIs, and deployment processes",
      "branch": "feature/documentation",
      "priority": "medium",
      "status": "completed",
      "created": "2025-07-07T00:00:00Z",
      "description": "Create complete documentation for developers and users"
    },
    {
      "id": "code-review-setup",
      "intern": "cursor-review-agent",
      "task": "Review all existing code for best practices, security issues, and performance optimizations",
      "branch": "feature/code-review",
      "priority": "medium",
      "status": "completed",
      "created": "2025-07-07T00:00:00Z",
      "description": "Comprehensive code quality review and recommendations"
    },
    {
      "id": "performance-optimization",
      "intern": "cursor-refactor-agent",
      "task": "Refactor codebase for optimal performance, bundle size, and maintainability",
      "branch": "feature/performance-optimization",
      "priority": "medium",
      "status": "completed",
      "created": "2025-07-07T00:00:00Z",
      "description": "Structural improvements and performance enhancements"
    },
    {
      "id": "testing-suite",
      "intern": "devops-intern",
      "task": "Implement comprehensive testing suite with unit, integration, and E2E tests",
      "branch": "feature/testing-suite",
      "priority": "high",
      "status": "completed",
      "created": "2025-07-07T00:00:00Z",
      "description": "Create complete testing infrastructure with automated test runs"
    },
    {
      "id": "real-time-game-notifications",
      "intern": "frontend-intern",
      "task": "Add real-time game notifications system to existing LiveScoreWidget.tsx at /nc-state-sports-hub/nc-state-sports-hub-production/src/components/LiveScoreWidget.tsx. Implement browser notifications using Notification API when NC State scores, reaches game milestones (halftime, final), or opponent scores. Add notification toggle in component with localStorage persistence. Include notification permission request flow and fallback toast notifications.",
      "branch": "feature/game-notifications",
      "priority": "high",
      "status": "in-progress",
      "created": "2025-07-08T00:00:00Z",
      "estimatedTime": "25 minutes",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/LiveScoreWidget.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/lib/notification-service.ts"
      ],
      "detailedRequirements": [
        "Add useNotifications() hook in src/lib/notification-service.ts",
        "Implement Notification.requestPermission() flow with user consent UI",
        "Monitor score changes in LiveScoreWidget with useEffect dependency on game.competitions[0].competitors",
        "Trigger notifications: NC State score +3/+6 points, halftime, final, opponent score",
        "Add notification toggle button in widget header with bell icon",
        "Store notification preferences in localStorage with key 'ncsu-notifications'",
        "Include fallback toast notifications using react-hot-toast for denied permissions",
        "Add notification sound toggle with 8-bit Wolfpack howl sound file",
        "Implement notification batching to prevent spam during rapid scoring"
      ]
    },
    {
      "id": "advanced-search-filters",
      "intern": "frontend-intern",
      "task": "Enhance existing SearchBar.tsx at /nc-state-sports-hub/nc-state-sports-hub-production/src/components/SearchBar.tsx with advanced filtering UI. Add dropdown filters for sport (Basketball/Football/Baseball), date range picker, author filter, and content type (News/Schedules/Roster). Implement search suggestions with debounced autocomplete using rssService.searchNews() and espnAPI methods. Add search history with localStorage persistence.",
      "branch": "feature/advanced-search",
      "priority": "medium",
      "status": "completed",
      "created": "2025-07-08T00:00:00Z",
      "estimatedTime": "30 minutes",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/SearchBar.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/SearchFilters.tsx"
      ],
      "detailedRequirements": [
        "Add SearchFilters component with sport dropdown (Basketball/Football/Baseball/All)",
        "Implement date range picker using react-datepicker with 'Last 7 days', 'Last 30 days', 'This season' presets",
        "Add author filter dropdown populated from rssService.getBackingThePackNews() authors",
        "Create content type filter: News, Game Schedule, Team Roster, Player Stats",
        "Implement debounced search suggestions using lodash.debounce (300ms delay)",
        "Add search history dropdown with last 10 searches stored in localStorage",
        "Include keyboard navigation (arrow keys, enter, escape) for suggestions",
        "Add clear all filters button and active filter count indicator",
        "Style with Tailwind CSS using NC State red (#CC0000) accent colors"
      ]
    },
    {
      "id": "component-lazy-loading",
      "intern": "frontend-intern",
      "task": "Implement lazy loading optimization for existing components in /nc-state-sports-hub/nc-state-sports-hub-production/src/components/. Convert GameSchedule.tsx, PlayerCard.tsx, and NewsCard.tsx to React.lazy() with Suspense boundaries. Add intersection observer for below-the-fold content loading. Implement image lazy loading with blur-up placeholder effects using next/image optimization.",
      "branch": "feature/lazy-loading",
      "priority": "high",
      "status": "in-progress",
      "created": "2025-07-08T00:00:00Z",
      "estimatedTime": "20 minutes",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/GameSchedule.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/PlayerCard.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/NewsCard.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/LazyLoadWrapper.tsx"
      ],
      "detailedRequirements": [
        "Create LazyLoadWrapper component with IntersectionObserver API",
        "Convert GameSchedule, PlayerCard, NewsCard to React.lazy() exports",
        "Add Suspense boundaries with skeleton loading states matching component structure",
        "Implement image lazy loading with blurred placeholder using next/image",
        "Add fade-in animation when components enter viewport using framer-motion",
        "Use threshold: 0.1 for intersection observer to trigger loading before fully visible",
        "Add error boundaries for lazy loading failures with retry mechanism",
        "Implement preloading for critical above-the-fold components",
        "Add loading performance metrics tracking with console.time/timeEnd"
      ]
    },
    {
      "id": "accessibility-enhancements",
      "intern": "frontend-intern",
      "task": "Enhance accessibility in existing NavigationHeader.tsx at /nc-state-sports-hub/nc-state-sports-hub-production/src/components/NavigationHeader.tsx and MobileMenu.tsx. Add ARIA labels, keyboard navigation support, focus management, and screen reader announcements. Implement skip links, proper heading hierarchy, and high contrast mode support. Add accessibility testing with axe-core.",
      "branch": "feature/accessibility",
      "priority": "medium",
      "status": "pending",
      "created": "2025-07-08T00:00:00Z",
      "estimatedTime": "25 minutes",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/NavigationHeader.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/MobileMenu.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/hooks/useKeyboardNavigation.ts"
      ],
      "detailedRequirements": [
        "Add ARIA labels to all navigation links and buttons (aria-label, aria-current)",
        "Implement keyboard navigation with Tab, Enter, Escape, Arrow keys",
        "Add focus trap in MobileMenu when opened using focus-trap-react",
        "Create skip links: 'Skip to main content', 'Skip to navigation'",
        "Add screen reader announcements for menu open/close states",
        "Implement high contrast mode CSS with @media (prefers-contrast: high)",
        "Add proper heading hierarchy (h1 for page title, h2 for sections)",
        "Include focus indicators with 2px solid outline for keyboard navigation",
        "Test with axe-core accessibility testing library in component tests"
      ]
    },
    {
      "id": "smooth-page-transitions",
      "intern": "frontend-intern",
      "task": "Add smooth page transitions and micro-animations to existing components using framer-motion. Enhance GameCard.tsx at /nc-state-sports-hub/nc-state-sports-hub-production/src/components/GameCard.tsx with hover animations, loading states, and staggered list animations. Add page transition effects for navigation between routes with 200ms duration.",
      "branch": "feature/smooth-transitions",
      "priority": "medium",
      "status": "pending",
      "created": "2025-07-08T00:00:00Z",
      "estimatedTime": "30 minutes",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/GameCard.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/PageTransition.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/AnimatedList.tsx"
      ],
      "detailedRequirements": [
        "Install framer-motion and add to GameCard.tsx with scale hover effect (1.02)",
        "Add loading skeleton animation with shimmer effect using CSS keyframes",
        "Create PageTransition component with fade and slide effects (duration: 200ms)",
        "Implement staggered list animations with 50ms delay between items",
        "Add spring animation for score updates with type: 'spring', stiffness: 300",
        "Include micro-interactions: button press animations, input focus effects",
        "Add entrance animations for components using initial, animate, exit props",
        "Create reusable AnimatedList component for game schedules and news feeds",
        "Optimize animations with transform and opacity only for 60fps performance"
      ]
    },
    {
      "id": "social-sharing-integration",
      "intern": "frontend-intern",
      "task": "Add social media sharing functionality to existing NewsCard.tsx at /nc-state-sports-hub/nc-state-sports-hub-production/src/components/NewsCard.tsx. Implement native sharing buttons for Twitter, Facebook, Reddit with proper Open Graph meta tags. Add copy-to-clipboard functionality with toast feedback. Include social share tracking analytics.",
      "branch": "feature/social-sharing",
      "priority": "low",
      "status": "pending",
      "created": "2025-07-08T00:00:00Z",
      "estimatedTime": "20 minutes",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/NewsCard.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/SocialShare.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/lib/social-sharing.ts"
      ],
      "detailedRequirements": [
        "Add SocialShare component with Twitter, Facebook, Reddit share buttons",
        "Implement native Web Share API with navigator.share() fallback to custom modal",
        "Add copy-to-clipboard functionality using navigator.clipboard.writeText()",
        "Include share tracking with analytics events (platform, article_id, timestamp)",
        "Add Open Graph meta tags: og:title, og:description, og:image, og:url",
        "Style share buttons with platform brand colors and hover effects",
        "Add toast notification feedback for successful copy/share actions",
        "Include share count display if available from RSS feed",
        "Add keyboard accessibility (Enter/Space) for share buttons"
      ]
    },
    {
      "id": "progressive-web-app-features",
      "intern": "frontend-intern",
      "task": "Implement PWA features for NC State Sports Hub. Add service worker for offline caching, create app manifest.json with NC State branding, and implement add-to-homescreen functionality. Add push notifications for game alerts and cache ESPN API responses for offline access. Include PWA install prompt component.",
      "branch": "feature/pwa-implementation",
      "priority": "medium",
      "status": "pending",
      "created": "2025-07-08T00:00:00Z",
      "estimatedTime": "30 minutes",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/public/manifest.json",
        "/nc-state-sports-hub/nc-state-sports-hub-production/public/sw.js",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/PWAInstallPrompt.tsx"
      ],
      "detailedRequirements": [
        "Create manifest.json with NC State branding (name, short_name, theme_color: #CC0000)",
        "Add app icons: 192x192, 512x512 PNG with NC State Wolfpack logo",
        "Implement service worker with cache-first strategy for static assets",
        "Add network-first caching for ESPN API responses with 5-minute TTL",
        "Create PWAInstallPrompt component with beforeinstallprompt event listener",
        "Add offline fallback page with cached NC State content",
        "Implement push notification subscription for game score updates",
        "Add PWA install banner with dismiss/install buttons",
        "Include background sync for failed API requests when back online"
      ]
    },
    {
      "id": "advanced-analytics-tracking",
      "intern": "frontend-intern",
      "task": "Implement comprehensive analytics tracking for user interactions. Add event tracking to existing components for click events, scroll depth, time on page, and search queries. Create custom analytics hook useAnalytics() that sends events to Google Analytics 4 and local storage for performance metrics. Add user journey tracking.",
      "branch": "feature/analytics-tracking",
      "priority": "low",
      "status": "pending",
      "created": "2025-07-08T00:00:00Z",
      "estimatedTime": "25 minutes",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/hooks/useAnalytics.ts",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/lib/analytics.ts",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/AnalyticsTracker.tsx"
      ],
      "detailedRequirements": [
        "Create useAnalytics hook with trackEvent, trackPageView, trackTiming functions",
        "Add click tracking to all buttons and links with event categories",
        "Implement scroll depth tracking at 25%, 50%, 75%, 100% milestones",
        "Add time on page tracking with session storage persistence",
        "Track search queries, filters applied, and result interactions",
        "Include performance metrics: page load time, API response times",
        "Add user journey tracking: entry page, navigation flow, exit page",
        "Create AnalyticsTracker component with useEffect listeners",
        "Store analytics data locally with periodic batch sending to GA4"
      ]
    },
    {
      "id": "dynamic-theme-customization",
      "intern": "frontend-intern",
      "task": "Add dynamic theme customization system to existing components. Create ThemeProvider context with dark/light mode toggle, seasonal NC State color schemes (basketball orange, football red, baseball green), and user preference persistence. Enhance existing components with theme-aware styling using CSS custom properties.",
      "branch": "feature/dynamic-theming",
      "priority": "medium",
      "status": "pending",
      "created": "2025-07-08T00:00:00Z",
      "estimatedTime": "30 minutes",
      "files": [
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/contexts/ThemeContext.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/components/ThemeToggle.tsx",
        "/nc-state-sports-hub/nc-state-sports-hub-production/src/styles/themes.css"
      ],
      "detailedRequirements": [
        "Create ThemeProvider context with useContext hook for theme state",
        "Add dark/light mode toggle with system preference detection",
        "Implement seasonal themes: basketball (orange), football (red), baseball (green)",
        "Add theme persistence with localStorage key 'ncsu-theme-preference'",
        "Create CSS custom properties for primary, secondary, accent colors",
        "Add ThemeToggle component with animated icon transitions",
        "Update existing components to use theme-aware CSS variables",
        "Include smooth color transitions (transition: color 0.3s ease)",
        "Add seasonal theme auto-switching based on current sport season"
      ]
    }
  ],
  "metadata": {
    "version": "1.1.0",
    "created": "2025-07-07T00:00:00Z",
    "lastUpdated": "2025-07-08T00:00:00Z",
    "totalTasks": 25,
    "project": "NC State Sports Hub",
    "agents": {
      "frontend-intern": 16,
      "backend-intern": 3,
      "auth-intern": 1,
      "devops-intern": 2,
      "cursor-doc-agent": 1,
      "cursor-review-agent": 1,
      "cursor-refactor-agent": 1
    }
  }
}
